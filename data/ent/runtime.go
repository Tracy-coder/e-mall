// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/Tracy-coder/e-mall/data/ent/email"
	"github.com/Tracy-coder/e-mall/data/ent/schema"
	"github.com/Tracy-coder/e-mall/data/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	emailMixin := schema.Email{}.Mixin()
	emailMixinFields0 := emailMixin[0].Fields()
	_ = emailMixinFields0
	emailMixinFields1 := emailMixin[1].Fields()
	_ = emailMixinFields1
	emailFields := schema.Email{}.Fields()
	_ = emailFields
	// emailDescCreatedAt is the schema descriptor for created_at field.
	emailDescCreatedAt := emailMixinFields0[1].Descriptor()
	// email.DefaultCreatedAt holds the default value on creation for the created_at field.
	email.DefaultCreatedAt = emailDescCreatedAt.Default.(func() time.Time)
	// emailDescUpdatedAt is the schema descriptor for updated_at field.
	emailDescUpdatedAt := emailMixinFields0[2].Descriptor()
	// email.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	email.DefaultUpdatedAt = emailDescUpdatedAt.Default.(func() time.Time)
	// email.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	email.UpdateDefaultUpdatedAt = emailDescUpdatedAt.UpdateDefault.(func() time.Time)
	// emailDescStatus is the schema descriptor for status field.
	emailDescStatus := emailMixinFields1[0].Descriptor()
	// email.DefaultStatus holds the default value on creation for the status field.
	email.DefaultStatus = emailDescStatus.Default.(uint8)
	// emailDescIsVerified is the schema descriptor for is_verified field.
	emailDescIsVerified := emailFields[1].Descriptor()
	// email.DefaultIsVerified holds the default value on creation for the is_verified field.
	email.DefaultIsVerified = emailDescIsVerified.Default.(bool)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userMixinFields1 := userMixin[1].Fields()
	_ = userMixinFields1
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[1].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields0[2].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescStatus is the schema descriptor for status field.
	userDescStatus := userMixinFields1[0].Descriptor()
	// user.DefaultStatus holds the default value on creation for the status field.
	user.DefaultStatus = userDescStatus.Default.(uint8)
	// userDescAvatar is the schema descriptor for avatar field.
	userDescAvatar := userFields[4].Descriptor()
	// user.DefaultAvatar holds the default value on creation for the avatar field.
	user.DefaultAvatar = userDescAvatar.Default.(string)
}
