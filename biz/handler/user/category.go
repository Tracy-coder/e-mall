// Code generated by hertz generator.

package user

import (
	"context"

	"github.com/Tracy-coder/e-mall/biz/domain"
	"github.com/Tracy-coder/e-mall/biz/logic"
	base "github.com/Tracy-coder/e-mall/biz/model/base"
	user "github.com/Tracy-coder/e-mall/biz/model/user"
	"github.com/Tracy-coder/e-mall/data"
	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
	"github.com/jinzhu/copier"
)

// CreateCategory .
// @router /api/v2/categories [POST]
func CreateCategory(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.CreateCategoryReq
	err = c.BindAndValidate(&req)
	resp := new(base.BaseResp)
	if err != nil {
		resp.ErrCode = base.ErrCode_ArgumentError
		resp.ErrMsg = err.Error()
		c.JSON(consts.StatusBadRequest, resp)
		return
	}
	var createCategoryReq domain.CreateCategoryReq
	err = copier.Copy(&createCategoryReq, &req)
	if err != nil {
		resp.ErrCode = base.ErrCode_CopierError
		resp.ErrMsg = err.Error()
		c.JSON(consts.StatusBadRequest, resp)
		return
	}
	err = logic.NewCategory(data.Default()).CreateCategory(ctx, createCategoryReq)
	if err != nil {
		resp.ErrCode = base.ErrCode_CreateCategoryError
		resp.ErrMsg = err.Error()
		c.JSON(consts.StatusInternalServerError, resp)
		return
	}
	resp.ErrCode = base.ErrCode_Success
	resp.ErrMsg = "success"
	c.JSON(consts.StatusOK, resp)
}

// ListCategory .
// @router /api/v1/categories [GET]
func ListCategory(ctx context.Context, c *app.RequestContext) {
	var err error
	var req user.Empty
	resp := new(user.ListCategoryResp)
	err = c.BindAndValidate(&req)
	if err != nil {
		resp.ErrCode = base.ErrCode_ArgumentError
		resp.ErrMsg = err.Error()
		c.JSON(consts.StatusBadRequest, resp)
		return
	}
	info, err := logic.NewCategory(data.Default()).ListCategory(ctx)
	if err != nil {
		resp.ErrCode = base.ErrCode_ListCategoryError
		resp.ErrMsg = err.Error()

		c.JSON(consts.StatusBadRequest, resp)
		return
	}
	categoryInfo := make([]*user.CategoryInfo, len(info))
	err = copier.Copy(&categoryInfo, &info)
	if err != nil {
		resp.ErrCode = base.ErrCode_CopierError
		resp.ErrMsg = err.Error()

		c.JSON(consts.StatusBadRequest, resp)
		return
	}
	resp.ErrCode = base.ErrCode_Success
	resp.ErrMsg = "success"
	resp.Categories = categoryInfo
	c.JSON(consts.StatusOK, resp)
}
