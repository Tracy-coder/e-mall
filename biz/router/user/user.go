// Code generated by hertz generator. DO NOT EDIT.

package user

import (
	user "github.com/Tracy-coder/e-mall/biz/handler/user"
	"github.com/cloudwego/hertz/pkg/app/server"
)

/*
 This file will register all the routes of the services in the master idl.
 And it will update automatically when you use the "update" command for the idl.
 So don't modify the contents of the file, or your code will be deleted when it is updated.
*/

// Register register routes based on the IDL 'api.${HTTP Method}' annotation.
func Register(r *server.Hertz) {

	root := r.Group("/", rootMw()...)
	{
		_api := root.Group("/api", _apiMw()...)
		{
			_v1 := _api.Group("/v1", _v1Mw()...)
			_v1.GET("/captcha", append(_captchaMw(), user.Captcha)...)
			_v1.GET("/carousels", append(_listcarouselsMw(), user.ListCarousels)...)
			_v1.GET("/categories", append(_listcategoryMw(), user.ListCategory)...)
			_v1.GET("/notices", append(_shownoticesMw(), user.ShowNotices)...)
			_v1.GET("/product", append(_showproductMw(), user.ShowProduct)...)
			_product := _v1.Group("/product", _productMw()...)
			_product.GET("/img", append(_showproductimgMw(), user.ShowProductImg)...)
			_product.GET("/rankings", append(_showproductrankingsMw(), user.ShowProductRankings)...)
			_v1.GET("/products", append(_listproductMw(), user.ListProduct)...)
			_v1.POST("/register", append(_registerMw(), user.Register)...)
			_v1.GET("/verify_email", append(_verifyemailMw(), user.VerifyEmail)...)
			{
				_alipay := _v1.Group("/alipay", _alipayMw()...)
				_alipay.GET("/callback", append(_callbackpayMw(), user.CallbackPay)...)
				_alipay.POST("/notify", append(_notifypayMw(), user.NotifyPay)...)
			}
			{
				_github := _v1.Group("/github", _githubMw()...)
				_github.GET("/login", append(_gtloginMw(), user.GTLogin)...)
				_login := _github.Group("/login", _loginMw()...)
				_login.GET("/callback", append(_gtlogincallbackMw(), user.GTLoginCallback)...)
			}
			{
				_user := _v1.Group("/user", _userMw()...)
				_user.DELETE("/addresses", append(_deleteaddressMw(), user.DeleteAddress)...)
				_user.GET("/addresses", append(_showaddressMw(), user.ShowAddress)...)
				_user.POST("/addresses", append(_createaddressMw(), user.CreateAddress)...)
				_user.PUT("/addresses", append(_updateaddressMw(), user.UpdateAddress)...)
				_user.DELETE("/carts", append(_deletecartMw(), user.DeleteCart)...)
				_user.GET("/carts", append(_showcartMw(), user.ShowCart)...)
				_user.POST("/carts", append(_createcartMw(), user.CreateCart)...)
				_user.PUT("/carts", append(_updatecartMw(), user.UpdateCart)...)
				_user.GET("/count", append(_showcountMw(), user.ShowCount)...)
				_user.DELETE("/favourites", append(_deletefavouriteMw(), user.DeleteFavourite)...)
				_user.GET("/favourites", append(_showfavouritesMw(), user.ShowFavourites)...)
				_user.POST("/favourites", append(_createfavouriteMw(), user.CreateFavourite)...)
				_user.GET("/info", append(_userinfoMw(), user.UserInfo)...)
				_user.GET("/order", append(_showorderMw(), user.ShowOrder)...)
				_user.GET("/orders", append(_listorderMw(), user.ListOrder)...)
				_user.POST("/orders", append(_createorderMw(), user.CreateOrder)...)
				_user.GET("/payments", append(_initpayMw(), user.InitPay)...)
				_user.POST("/upload_avatar", append(_uploadavatarMw(), user.UploadAvatar)...)
				_user.POST("/valid_email", append(_validemailMw(), user.ValidEmail)...)
			}
		}
		{
			_v2 := _api.Group("/v2", _v2Mw()...)
			_v2.POST("/carousels", append(_createcarouselMw(), user.CreateCarousel)...)
			_v2.POST("/categories", append(_createcategoryMw(), user.CreateCategory)...)
			_v2.POST("/notices", append(_createnoticeMw(), user.CreateNotice)...)
			_v2.DELETE("/product", append(_deleteproductMw(), user.DeleteProduct)...)
			_product0 := _v2.Group("/product", _product0Mw()...)
			_product0.POST("/img", append(_createproductimgMw(), user.CreateProductImg)...)
			_v2.PUT("/product", append(_updateproductMw(), user.UpdateProduct)...)
			_v2.POST("/products", append(_createproductMw(), user.CreateProduct)...)
		}
	}
}
